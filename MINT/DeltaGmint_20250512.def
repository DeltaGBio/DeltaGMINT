BootStrap: docker
From: nvidia/cuda:12.4.0-devel-ubuntu22.04


%post
    # Combine apt update, upgrade, installation of required packages,
    # locale generation, and cleanup into a single chained command.
    apt update && apt upgrade -y && \
    apt install -y build-essential libgfortran5 git curl wget locales && \
    locale-gen en_US.UTF-8 && \
    rm -rf /var/lib/apt/lists/* && apt autoremove -y && apt clean

    # Install Pyenv to manage Python versions
    git clone https://github.com/yyuu/pyenv.git /usr/local/apps/pyenv
    export PYENV_ROOT="/usr/local/apps/pyenv"
    export PATH="${PYENV_ROOT}/bin:${PATH}"
    
    # Install miniforge3 using Pyenv and set the corresponding PATH
    pyenv install miniforge3-23.11.0-0 && pyenv global miniforge3-23.11.0-0
    export MINIFORGE3_ROOT="${PYENV_ROOT}/versions/miniforge3-23.11.0-0"
    export PATH="${MINIFORGE3_ROOT}/bin:${PATH}"
    
    # Update conda, create the SLIMshot environment with CUDA override,
    # install the necessary packages, and clean up conda caches.
    conda update -n base conda && \
    export CONDA_OVERRIDE_CUDA="12.4" && \
    conda env create --name mint --file=environment.yml && \
    conda clean --all --force-pkgs-dirs --yes
    
    # Activate the SLIMshot environment
    export mint="${MINIFORGE3_ROOT}/envs/mint"
    export PATH="${mint}/bin:${PATH}"

    pip install -e .
    pip install lightning seaborn tqdm plotly peft importlib_metadata scipy
    pip install --upgrade wandb
    pip install scikit-learn==1.0.2
    # Verify the conda environment installation
    conda list -n mint
    

%files
    # Copy all files and directories from the build context into the image
    . .

%environment
  # Define runtime environment variables for SLIMshot.
  export MINIFORGE3_ROOT="/usr/local/apps/pyenv/versions/miniforge3-23.11.0-0"
  export mint="${MINIFORGE3_ROOT}/envs/mint"
  export PATH="${mint}/bin:${PATH}"

%runscript
  # Pass all arguments to the underlying executable.
  "$@"
